# Workflow to build and deploy a Next.js site to GitHub Pages
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  # Allows manual trigger of the workflow
  workflow_dispatch:

# Permissions for the workflow
permissions:
  contents: read
  pages: write
  id-token: write

# Prevent redundant runs while keeping active runs intact
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4
      
      # Detect the package manager
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      
      # Set up Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # Configure Pages for deployment
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      # Restore cache to speed up builds
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      # Install dependencies
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      # Check if code changes require a build
      - name: Check for code changes
        id: check_changes
        run: |
          git diff --quiet HEAD^ HEAD -- ./src
          echo "changed=$?" >> $GITHUB_ENV
      
      # Skip the build if no code changes
      - name: Skip build if no changes
        if: env.changed == '0'
        run: echo "No changes detected. Skipping build."
      
      # Build the Next.js site
      - name: Build with Next.js
        if: env.changed != '0'
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      # Compress the build output for efficient upload
      - name: Compress build output
        if: env.changed != '0'
        run: tar -czvf out.tar.gz ./out

      # Upload the compressed artifact
      - name: Upload artifact
        if: env.changed != '0'
        uses: actions/upload-pages-artifact@v3
        with:
          path: out.tar.gz

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy the site to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
